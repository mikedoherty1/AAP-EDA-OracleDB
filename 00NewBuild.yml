---
- hosts: all
  vars:
  tasks:
  - name: Add New VBox server to control.local /etc/hosts file   
    lineinfile:
      path: /etc/hosts
      line: "{{ aap_serv_ip }}     {{ aap_serv }}"
  - name: ansible-core  on "{{ inventory_hostname }}"
    ansible.builtin.shell:
      cmd: dnf install ansible-core -y
    register: shell
  - debug: var=shell.stdout_lines
  - name: ansible-galaxy collection install ansible.posix on "{{ inventory_hostname }}"
    ansible.builtin.shell:
      cmd: ansible-galaxy collection install ansible.posix
    register: shell
  - debug: var=shell.stdout_lines
# Missing packages GIT
  - name: Ensure group "ansible" exists
    ansible.builtin.group:
      name: ansible
      state: present
  - name: Add user 'ansible' with a bash shell, appending the group 'ansible' group
    ansible.builtin.user:
      name: ansible
      shell: /bin/bash
      groups: root, ansible
      append: yes
      create_home: yes
      comment: Ansible Admin
      password: "{{ opass | password_hash('sha512') }}"
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: ~/.ssh/id_rsa
# Restart sshd
  - name: Generate ssh keys ansible user
    ansible.builtin.user:
      name: ansible
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: ~/.ssh/id_rsa
  - name: Generate ssh keys root user
    ansible.builtin.user:
      name: root
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: ~/.ssh/id_rsa
#    - name: Set authorized key taken from file root user
#      ansible.posix.authorized_key:
#        user: root
#        state: present
#        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
#    - name: Set authorized key taken from file ansible user
#      ansible.posix.authorized_key:
#        user: ansible
#        state: present
#        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  - name: Allow ansible user to sudo without a password
    lineinfile:
      dest: "/etc/sudoers" 
      state: "present"
      regexp: "^%ansible"
      line: "ansible ALL=(ALL) NOPASSWD: ALL"
  - name: Enable Root Login
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: "PermitRootLogin yes"
      state: present
      backup: yes
# Restart sshd
  - name: Restart sshd
    ansible.builtin.shell:
      cmd: systemctl restart sshd
    register: shell
  - debug: var=shell.stdout_lines
  - name: Add ssh fingerprint to known_hosts "{{ inventory_hostname }}" 
    ansible.builtin.shell:
      cmd: ssh-keyscan -H "{{ inventory_hostname }}" >> ~/.ssh/known_hosts
    register: shell
  - debug: var=shell.stdout_lines
  - name: Add ssh fingerprint to known_hosts file for server "{{ aap_serv }}"
    ansible.builtin.shell:
      cmd: ssh-keyscan -H "{{ aap_serv }}" >> ~/.ssh/known_hosts
    register: shell
  - debug: var=shell.stdout_lines
  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      remote_src: true
      src: /root/.ssh/known_hosts
      dest: /home/ansible/.ssh/known_hosts
      owner: ansible
      group: ansible
      mode: '0644'
# Entry for self ssh 
  - name: passwordless to self user ansible 
    ansible.builtin.shell:
      cmd: cat id_rsa.pub >> authorized_keys
      chdir: /home/ansible/.ssh
# Entry for self ssh 
  - name: passwordless to self user root "{{ inventory_hostname }}"
    ansible.builtin.shell:
      cmd: cat id_rsa.pub >> authorized_keys
      chdir: /root/.ssh
#Not working
#  - name: Copy AAP authorized_keys to remote host
#    ansible.builtin.copy:
#      src: /root/.ssh/authorized_keys
#      dest: /root/.ssh/aap-authorized_keys

