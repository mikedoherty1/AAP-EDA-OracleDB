---
- hosts: all
  vars:
    ansible_python_interpreter: auto_silent
  tasks:
# Touch File
    - name: Check that the file exists
      stat:
        path: /root/software/AAP-bundle-2.4-6.2-x86_64.tar.gz
      register: stat_result
    - name: Copy EDA From "{{ aap_serv }}" to "{{ inventory_hostname }}" 
      ansible.builtin.synchronize:
        src: /root/software/AAP-bundle-2.4-6.2-x86_64.tar.gz
        dest: /root/software/AAP-bundle-2.4-6.2-x86_64.tar.gz
      when: stat_result.stat.exists == False 
      delegate_to: "{{ aap_serv }}"
    - name: create software directory 
      ansible.builtin.shell:
        cmd: mkdir -p /root/software/aap-bundle-2.4-6.2
      register: shell
    - debug: var=shell.stdout_lines
    - name: move Binaries
      ansible.builtin.shell:
        cmd: mv /root/software/AAP-bundle-2.4-6.2-x86_64.tar.gz /root/software/aap-bundle-2.4-6.2
      register: shell
    - debug: var=shell.stdout_lines
    - name: Untar Binaries
      ansible.builtin.shell:
        cmd: tar -xzvf AAP-bundle-2.4-6.2-x86_64.tar.gz
        chdir: /root/software/aap-bundle-2.4-6.2
      register: shell
    - debug: var=shell.stdout_lines
    - name: backup EDA Inventoy file  
      ansible.builtin.shell:
        cmd: cp inventory orig-inventory
        chdir: /root/software/aap-bundle-2.4-6.2
      register: shell
    - debug: var=shell.stdout_lines
    - name: Add ssh fingerprint to known_hosts file on "{{ inventory_hostname }}"  server for server "{{ aap_serv }}"
      ansible.builtin.shell:
        cmd: ssh-keyscan -H "{{ aap_serv }}" >> ~/.ssh/known_hosts
      register: shell
    - debug: var=shell.stdout_lines  
# add hack entry
    - name: remove inventory file for hack copy
      ansible.builtin.shell:
        cmd: rm -rf /root/software/dbhost
      register: shell
    - debug: var=shell.stdout_lines
    - name: mkdir 
      ansible.builtin.shell:
        cmd: mkdir -p /root/software
      register: shell
    - debug: var=shell.stdout_lines
# Touch File
    - name: create inventory file for hack copy
      ansible.builtin.shell:
        cmd: touch /root/software/dbhost
      register: shell
    - debug: var=shell.stdout_lines
    - name: Create local inventory file /root/software/dbhost on "{{ inventory_hostname }}"   
      lineinfile:
        path: /root/software/dbhost
        line: "{{ aap_serv }} ansible_user=root ansible_password=redhat "
    - name: Work Around for copy file in GUI - gen auth_keys inventory file /root/dbhost on AAP
      ansible.builtin.shell:
        cmd: ansible-playbook -i /root/software/dbhost /root/software/keys.yml
      register: shell
    - debug: var=shell.stdout_lines
    - name: Update Inventoy file with "{{ aap_serv }}" server 
      ansible.builtin.shell:
        cmd: sed -i "s/change_host_name/"{{ aap_serv }}"/g" /root/software/aap-bundle-2.4-6.2/inventory
        chdir: /root/software/aap-bundle-2.4-6.2
    - name: Update Inventoy file with "{{ aap_serv }}" server 
      ansible.builtin.shell:
        cmd: sed -i "s/REDHAT_UID//g" /root/software/aap-bundle-2.4-6.2/inventory
        chdir: /root/software/aap-bundle-2.4-6.2
    - name: Update Inventoy file with "{{ aap_serv }}" server 
      ansible.builtin.shell:
        cmd: sed -i "s/REDHAT_PWD//g" /root/software/aap-bundle-2.4-6.2/inventory
        chdir: /root/software/aap-bundle-2.4-6.2
    - name: Update Inventoy file with "{{ inventory_hostname }}" server 
      lineinfile:
        path: /root/software/aap-bundle-2.4-6.2/inventory
        search_string: '[automationedacontroller]'
        insertafter: '[automationedacontroller]'
        line: "{{ inventory_hostname }}"