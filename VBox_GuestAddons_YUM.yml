---
- hosts: all
  tasks:
    - name: Setting Kernel to not use UEK 
      ansible.builtin.shell:
        cmd: grubby --set-default /boot/vmlinuz-3.10.0-1127.el7.x86_64
      register: shell
    - debug: var=shell.stdout_lines
# restart
    - name: restart server for el7.x86_64
      shell: reboot
      ignore_unreachable: true
    - name: wait for server to come back
      wait_for_connection: 
        timeout: 120
# Install GIT
    - name: Installing missing packages git
      ansible.builtin.shell:
        cmd: yum install git -y
      register: shell
    - debug: var=shell.stdout_lines
# Install wget
    - name: Installing missing packages wget, needed if direct download of software 
      ansible.builtin.shell:
        cmd: yum install wget -y
      register: shell
    - debug: var=shell.stdout_lines
# devel
    - name: Installing missing packages kernel-devel
      ansible.builtin.shell:
        cmd: yum install kernel-devel -y
      register: shell
    - debug: var=shell.stdout_lines
# bzip2
    - name: Installing missing packages bzip2
      ansible.builtin.shell:
        cmd: yum install bzip2 -y
      register: shell
    - debug: var=shell.stdout_lines
# gcc
    - name: Installing missing packages gcc
      ansible.builtin.shell:
        cmd: yum install gcc -y
      register: shell
    - debug: var=shell.stdout_lines
# kernel-devel
    - name: Installing kernel specific devel packages 
      ansible.builtin.shell:
        cmd: yum install "kernel-devel-uname-r == $(uname -r)" -y
      register: shell
    - debug: var=shell.stdout_lines
    - name: Generate ssh keys
      ansible.builtin.user:
        name: root
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
# mkdir
    - name: make filesystem for mounting cdrom
      ansible.builtin.shell:
        cmd: mkdir -p /media/cdrom
      register: shell
    - debug: var=shell.stdout_lines
# mkdir
    - name: make filesystem for Software
      ansible.builtin.shell:
        cmd: mkdir -p /root/software
      register: shell
    - debug: var=shell.stdout_lines
# mount
    - name: mount cdrom
      ansible.builtin.shell:
        cmd: mount /dev/cdrom /media/cdrom
      register: shell
    - debug: var=shell.stdout_lines
# VBoxLinuxAdditions
    - name: This  will install VBoxLinuxAdditions on OEL
      ansible.builtin.shell:
        cmd: sh VBoxLinuxAdditions.run
        chdir: /media/cdrom
      register: shell
    - debug: var=shell.stdout_lines
# VBoxLinuxAdditions
    - name: umount VBoxLinuxAdditions on OEL
      ansible.builtin.shell:
        cmd: pwd
        chdir: /root
      register: shell
    - debug: var=shell.stdout_lines
# umount
    - name: umount cdrom
      ansible.builtin.shell:
        cmd: umount /media/cdrom
      register: shell
    - debug: var=shell.stdout_lines
# Enable Root Login
    - name: Enable Root Login
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: "PermitRootLogin yes"
        state: present
        backup: yes
